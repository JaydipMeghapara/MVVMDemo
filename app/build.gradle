import java.text.SimpleDateFormat

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
//    id 'com.google.gms.google-services'
    id 'androidx.navigation.safeargs.kotlin'
}

project.ext {
    versionMajor = 1
    versionMinor = 0
    versionPatch = 1
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.jaydip.mvvmdemo"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode getVersionCodeValue()
        versionName getVersionNameValue()
        setProperty("archivesBaseName", "MVVMDEMO-$versionName" + getDate())

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            buildConfigField "String", "BASE_URL_DEV", BASE_URL_DEV
            buildConfigField "String", "BASE_URL_QA", BASE_URL_QA
            buildConfigField "String", "BASE_URL_UAT", BASE_URL_UAT

        }
        release {
            debuggable false
            minifyEnabled false
            buildConfigField "String", "BASE_URL_DEV", BASE_URL_DEV
            buildConfigField "String", "BASE_URL_QA", BASE_URL_QA
            buildConfigField "String", "BASE_URL_UAT", BASE_URL_UAT
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        javaMaxHeapSize "4G"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    allprojects {
        repositories {
            google()
            jcenter()
            maven { url "https://jitpack.io" }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'androidx.activity:activity-ktx:1.2.2'

    //coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1'

    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha08"

    // Proto DataStore
    implementation "androidx.datastore:datastore-core:1.0.0-alpha08"

    //Koin
    implementation "org.koin:koin-android-viewmodel:2.1.6"
    implementation "org.koin:koin-android:2.1.6"

    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'  // View model scope
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'   //Lifecycle Scope
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'   // live data scope

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'
    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation'com.squareup.retrofit2:converter-scalars:2.8.1'

    implementation "com.squareup.okhttp3:okhttp:4.8.1"
    implementation "com.squareup.okhttp3:logging-interceptor:4.8.1"
    implementation 'androidx.work:work-runtime:2.5.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Room
    implementation 'androidx.room:room-runtime:2.2.6'
    kapt 'androidx.room:room-compiler:2.2.6'
    implementation 'androidx.room:room-ktx:2.2.6'

    implementation "javax.inject:javax.inject:1"

    // Navigation

    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Other
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation "br.com.simplepass:loading-button-android:2.2.0"
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
    implementation 'com.chibatching.kotpref:kotpref:2.11.0'

    implementation 'com.karumi:dexter:6.2.1'
    implementation 'me.relex:circleindicator:1.3.2'

    //circular button
    implementation 'br.com.simplepass:loading-button-android:2.2.0'
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //glide image transformation
    implementation 'jp.wasabeef:glide-transformations:3.0.1'

    implementation 'com.github.angads25:toggle:1.1.0'
    // Location
    implementation 'com.github.renaudcerrato:static-maps-api:1.0.4'
//    implementation 'com.google.android.gms:play-services-location:18.0.0'
}
def getVersionCodeValue() {
    return versionMajor * 100 + versionMinor * 10 + versionPatch
}

def getDate() {
    def df = new SimpleDateFormat("dd-MM-yyyy")
    return "(" + df.format(new Date()) + ")"
}

def getVersionNameValue() {
    def buildValue = ''
    def runTasks = gradle.startParameter.taskNames
    if ('crashlyticsUploadDistributionReleaseCandidate' in runTasks ||
            'crashlyticsUploadDistributionDebug'
            in
            runTasks) {
        def df = new SimpleDateFormat("yyyyMMdd:HHmm")
        buildValue = df.format(new Date())
    }
    def versionNameValue = "${versionMajor}.${versionMinor}.${versionPatch}"
    if (buildValue != '') {
        versionNameValue += "-${buildValue}"
    }
    return versionNameValue
}